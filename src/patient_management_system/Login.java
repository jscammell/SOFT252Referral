/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient_management_system;

import User.Users;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;

/**
 *
 * @author Josh
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbUserType = new javax.swing.JComboBox<>();
        btnExit = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        jLabel1.setText("UserName");

        jLabel2.setText("Password");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel3.setText("User Type");

        cmbUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Administrator", "Secretary", "Doctor" }));

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Login");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(cmbUserType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnSubmit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String username;
        String password;
        String userType;
        if(txtUsername != null) {
        username = txtUsername.getText();
        }
        else{        
        username = null;
        }
        if (txtPassword != null) {
        password = txtPassword.getText();
        }
        else{        
        password = null;
        }
        //Code above checks if the user has enetered text into the text boxes
        
        
        userType = cmbUserType.getSelectedItem().toString();
        boolean userTrue;
        boolean passwordTrue;
        
        switch(userType) {
            case "Patient" :
                String fileUsername;
                String filePassword;
                String firstName;
                String lastName;                
                String mobilePhoneNumber;                
                String houseNumberName;
                String addressLine;
                String city;
                String postcode;
                String dateOfBirth;                
                String gender;
                String NHSNumber;
                try{
                File file = new File("./accounts\\Patient.txt");
                BufferedReader br = new BufferedReader (new FileReader (file));
                while ((br.readLine()) != null) {
                fileUsername = br.readLine();
                filePassword = br.readLine();
                firstName = br.readLine();
                lastName = br.readLine();                
                mobilePhoneNumber = br.readLine();               
                houseNumberName = br.readLine();
                addressLine = br.readLine();
                city = br.readLine();
                postcode = br.readLine();
                dateOfBirth = br.readLine();                
                gender = br.readLine();
                NHSNumber = br.readLine();
                if (username.equals(fileUsername)){
                        userTrue = true;
                }
                else {
                userTrue = false;
                }
                if (password.equals(filePassword)){
                passwordTrue = true;               
                }
                else{
                passwordTrue = false;
                }
                if (Boolean.TRUE.equals(passwordTrue) && Boolean.TRUE.equals(userTrue)){
                Patient_GUI open= new Patient_GUI();
                open.setVisible (true);
                this.dispose();
                }
                }
                
                }
                catch(Exception e) {
                e.printStackTrace();
                }
                
                
                
                break;
                
            case "Doctor" :
                try{
                File file = new File("./accounts\\Doctor.txt");
                BufferedReader br = new BufferedReader (new FileReader (file));
                while ((br.readLine()) != null) {
                    fileUsername = br.readLine();
                    filePassword = br.readLine();
                    firstName = br.readLine();
                    lastName = br.readLine();
                    int ratingLength = Integer.parseInt(br.readLine());
                    
                    for (int i = 0; i < ratingLength; i++) {
                        String description = br.readLine();                    
                    }
                    if (username.equals(fileUsername)) {
                    userTrue = true;
                    }
                    else {
                    userTrue = false;
                    }
                    if (password.equals(filePassword)) {
                    passwordTrue = true;               
                    }
                    else{
                    passwordTrue = false;
                    }
                    if (Boolean.TRUE.equals(passwordTrue) && Boolean.TRUE.equals(userTrue)){
                    Doctor_GUI open= new Doctor_GUI();
                    open.setVisible(true);
                    this.dispose();
                }}
        }
                catch(Exception e) {
                e.printStackTrace();
                }
                
                
                
                break;
                
                case "Administrator" :
                try{
                File file = new File("./accounts\\Administrator.txt");
                BufferedReader br = new BufferedReader (new FileReader (file));
                while ((br.readLine()) != null) {
                fileUsername = br.readLine();
                filePassword = br.readLine();
                firstName = br.readLine();
               
                if (username.equals(fileUsername)){
                        userTrue = true;
                }
                else {
                userTrue = false;
                }
                if (password.equals(filePassword)){
                passwordTrue = true;               
                }
                else{
                passwordTrue = false;
                }
                if (Boolean.TRUE.equals(passwordTrue) && Boolean.TRUE.equals(userTrue)){
                Administrator_GUI open= new Administrator_GUI();
                open.setVisible (true);
                this.dispose();
                }
                }
                
                }
                catch(Exception e) {
                e.printStackTrace();
                }
                
                
                
                break;
                
                case "Secretary" :
                try{
                File file = new File("./accounts\\Secretary.txt");
                BufferedReader br = new BufferedReader (new FileReader (file));
                while ((br.readLine()) != null) {
                fileUsername = br.readLine();
                filePassword = br.readLine();                
                if (username.equals(fileUsername)){
                        userTrue = true;
                }
                else {
                userTrue = false;
                }
                if (password.equals(filePassword)){
                passwordTrue = true;               
                }
                else{
                passwordTrue = false;
                }
                if (Boolean.TRUE.equals(passwordTrue) && Boolean.TRUE.equals(userTrue)){
                Secretary_GUI open= new Secretary_GUI();
                open.setVisible (true);
                this.dispose();
                }
                }
                
                }
                catch(Exception e) {
                e.printStackTrace();
                }
                
        }         
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
              
        this.setVisible(false);
        this.dispose();        //closes the appliaction when Exit button is pressed
    }//GEN-LAST:event_btnExitActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cmbUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
