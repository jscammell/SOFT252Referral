/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient_management_system;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import User.getData;
import User.Users;
import Processes.Appointment;

/**
 *
 * @author Josh
 */
public class SecretaryApproveRequestedAppointment_GUI extends javax.swing.JFrame {

    /**
     * Creates new form AppointmentRequest
     */
    public SecretaryApproveRequestedAppointment_GUI() {
        initComponents();
        
        
        ArrayList<Users> reAppointments = new ArrayList<Users>();
        getData data = new getData();
        try{
        data.readRePatients(reAppointments);
        }
        catch(Exception e) {
        e.printStackTrace();
        }
        
        Object[] aAppointments = reAppointments.toArray();
        
        String patient_Name = ((Processes.Appointment)aAppointments[0]).getPatient_Name();
        txtUsername.setText(patient_Name);
        String day = ((Processes.Appointment)aAppointments[0]).getAppointment_Day();
        txtDay.setText(day);
        String month = ((Processes.Appointment)aAppointments[0]).getAppointment_Month();
        txtMonth.setText(month);
        String year = ((Processes.Appointment)aAppointments[0]).getAppointment_Year();
        txtDoctor.setText(year);
        String doctor_Names = ((User.Appointment)aAppointments[0]).getDoctor_Name();
        txtDoctor.setText(doctor_Names);
       
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDoctor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtRoomNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Confirm Appointment");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel2.setText("Please Choose A Doctor");

        jLabel3.setText("DD");

        jLabel4.setText("MM");

        jLabel5.setText("YYYY");

        jLabel6.setText("Please Enter The Date You Want To Request An Appointment");

        jLabel7.setText("Username");

        jLabel8.setText("Please Enter Username to confirm");

        jLabel9.setText("Room Number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(80, 80, 80)
                                .addComponent(jLabel5))
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(txtRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtUsername))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSubmit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Secretary_GUI open = new Secretary_GUI();
        open.setVisible(true);
        this.setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        
        boolean isNotEmpty = false;
        String appointment_Day;
        String appointment_Month;
        String appointment_Year;
        String patient_Name;
        String doctor_Name;        
        String RoomNumber;
                
        if(txtDay != null) {
        appointment_Day = txtDay.getText();
        isNotEmpty = true;
        txtDay.setText("");
        }
        else{
        appointment_Day = null;
        isNotEmpty = false;
        }
        
        if(txtMonth != null) {
        appointment_Month = txtMonth.getText();
        isNotEmpty = true;
        txtMonth.setText("");
        }
        else{
        appointment_Month = null;
        isNotEmpty = false;
        }
        
        if(txtYear != null) {
        appointment_Year = txtYear.getText();
        isNotEmpty = true;
        txtYear.setText("");
        }
        else{
        appointment_Year = null;
        isNotEmpty = false;
        }
        
        if(txtUsername != null) {
        patient_Name = txtUsername.getText();
        isNotEmpty = true;
        txtUsername.setText("");
        }
        else{
        patient_Name = null;
        isNotEmpty = false;
        }    
        
        if(txtDoctor != null) {
        doctor_Name = txtDoctor.getText();
        isNotEmpty = true;
        txtDoctor.setText("");
        }
        else{
        doctor_Name = null;
        isNotEmpty = false;
        }
        
        if(txtRoomNumber != null) {
         RoomNumber = txtRoomNumber.getText();
        isNotEmpty = true;
        txtRoomNumber.setText("");
        }
        else{
         RoomNumber = null;
        isNotEmpty = false;
        }
       
        if (Boolean.TRUE.equals(isNotEmpty)){
        try{
        BufferedWriter out = new BufferedWriter(new FileWriter("./accounts\\Appointment.txt",true));
        out.newLine();
        out.write(appointment_Day);
        out.newLine();
        out.write(appointment_Month);
        out.newLine();
        out.write(appointment_Year);
        out.newLine();
        out.write(patient_Name);
        out.newLine();
        out.write(doctor_Name);
        out.newLine();       
        out.write(RoomNumber);
        out.newLine();       
        
        out.close();
        }
        catch(Exception e) {
        e.printStackTrace();
        }
        ArrayList<Appointment> reAppointments = new ArrayList<Appointment>();
        getData data = new getData();
        try{
        data.readAppointmentRequest(reAppointments);
        }
        catch(Exception e) {
        e.printStackTrace();
        }
        
        Object[] aAppointments = reAppointments.toArray();
        
        int length = aAppointments.length;
        data.removeAppointment (reAppointments.get(0),reAppointments);
        aAppointments = reAppointments.toArray();
        aAppointments = reAppointments.toArray();
        int newLength = aAppointments.length;
        if(newLength > 0) {
        
            for (int l = 0; l < newLength; l++) {
        
                appointment_Day = ((Processes.Appointment)aAppointments[l]).getAppointment_Day();
                appointment_Month = ((Processes.Appointment)aAppointments[l]).getAppointment_Month();
                appointment_Year = ((Processes.Appointment)aAppointments[l]).getAppointment_Year();
                patient_Name = ((Processes.Appointment)aAppointments[l]).getPatient_Name();
                doctor_Name = ((Processes.Appointment)aAppointments[l]).getDoctor_Name();
                
                
                try{
                BufferedWriter out = new BufferedWriter(new FileWriter("./accounts\\AppointmentRequest.txt", false));
                out.newLine();
                out.write(appointment_Day);
                out.newLine();
                out.write(appointment_Month);
                out.newLine();
                out.write(appointment_Year);
                out.newLine();
                out.write(patient_Name);
                out.newLine();
                out.write(doctor_Name);
                out.newLine();                
                
                
                }
                 catch(Exception e) {
                    e.printStackTrace();
                }
                
        }
            
        }
        else{
         try{
                BufferedWriter out = new BufferedWriter(new FileWriter("./accounts\\AppointmentRequest.txt", false));
                    out.newLine();
                }
                catch(Exception e){
                    e.printStackTrace();
                }   
        }        
        }
        

    }//GEN-LAST:event_btnSubmitActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtDoctor;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtRoomNumber;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
